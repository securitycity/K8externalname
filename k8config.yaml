apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sPolicies
metadata:
  name: enforce-externalname-port-policy
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Service"]
  parameters:
    severity: "high"
    enforcementAction: "deny"
    message: "ExternalName service contains an invalid port name"
    rego: |
      package k8spolicies

      violation[{"msg": msg}] {
          service := input.review.object
          service.kind == "Service"
          service.spec.type == "ExternalName"
          not isValidPortName(service.spec.ports)
          msg := sprintf("ExternalName service %v contains an invalid port name", [service.metadata.name])
      }

      isValidPortName(ports) {
          port := ports[_]
          split := split(port.name, "-")  // Define split here before using it
          count(split) > 1
          protocol := split[0]
          protocol == "https" ; protocol == "tls"
      }
